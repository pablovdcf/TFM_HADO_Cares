# This is a boilerplate parameters config generated for pipeline 'data_model'
# using Kedro 0.18.10.
#
# Documentation for this file format can be found in "Parameters"
# Link: https://docs.kedro.org/en/0.18.10/kedro_project_setup/configuration.html#parameters

model_options_alta:
  target: 'alta_category'
  test_size: 0.5
  random_state: 0
  features:
    - 'paliativo_onc_noc'
    - 'paliativo_no_onc_noc'
    - 'fiebre'
    - 'disnea'
    - 'dolor'
    - 'delirium'
    - 'p_terminal'
    - 'agonia'
    - 'ast_anorx'
    - 'agudo_estable'
    - 'cronico_reag'
    - 'trato_antibiotico'
    - 'transfusion'
    - 'paracentesis'
    - 'toracocentesis'
    - 'fe_iv'
    - 'ingreso_category'
    - 'diagnosis_category'
    - 'procedencia_category'
    - 'otros_category'
    - 'ps_ecog'
    - 'barthel'
    - 'gds_fast'
    - 'eva_ing'
    - 'n_estancias'
    - 'n_visitas'
    - 'tiene_sedacion'
    - 'morfina'
    - 'midazolam'
    - 'buscapina'
    - 'haloperidol'
    - 'levomepromazina'
    
model_options_diagnosis:
  target: 'diagnosis_category'
  test_size: 0.5
  random_state: 0
  features:
    - 'paliativo_onc_noc'
    - 'paliativo_no_onc_noc'
    - 'fiebre'
    - 'disnea'
    - 'dolor'
    - 'delirium'
    - 'p_terminal'
    - 'agonia'
    - 'ast_anorx'
    - 'agudo_estable'
    - 'cronico_reag'
    - 'trato_antibiotico'
    - 'transfusion'
    - 'paracentesis'
    - 'toracocentesis'
    - 'fe_iv'
    - 'ingreso_category'
    - 'alta_category'
    - 'procedencia_category'
    - 'otros_category'
    - 'ps_ecog'
    - 'barthel'
    - 'gds_fast'
    - 'eva_ing'
    - 'n_estancias'
    - 'n_visitas'
    - 'tiene_sedacion'
    - 'morfina'
    - 'midazolam'
    - 'buscapina'
    - 'haloperidol'
    - 'levomepromazina'

random_forest:
  module: sklearn.ensemble
  class: RandomForestClassifier
  kwargs:
      bootstrap:  False
      max_depth: 30
      n_estimators: 150

  param_grid:
      n_estimators: [50, 100, 150]
      max_depth: [None, 10, 20, 30]
      min_samples_split: [2, 5, 10]

xgb:
  module: xgboost
  class: XGBClassifier
  kwargs:
      colsample_bytree: 0.8
      gamma: 0.1
      learning_rate: 0.01
      max_depth: 7
      n_estimators: 150
      reg_lambda: 1
      subsample: 0.9

  param_grid:
      learning_rate: [0.01, 0.05, 0.1]
      n_estimators: [50, 100, 150]
      max_depth: [3, 5, 7]
      subsample: [0.8, 0.9, 1.0]
      colsample_bytree: [0.8, 0.9, 1.0]
      gamma: [0, 0.1, 0.2]
      reg_lambda: [1, 1.5, 2]


lgbm:
  module: lightgbm
  class: LGBMClassifier
  kwargs:
      colsample_bytree: 0.8
      learning_rate: 0.01
      max_depth: 7
      n_estimators: 150
      reg_alpha: 0
      reg_lambda: 2
      subsample: 0.8
      verbosity: -1

  param_grid:
      learning_rate: [0.01, 0.05, 0.1]
      n_estimators: [50, 100, 150]
      max_depth: [3, 5, 7]
      subsample: [0.8, 0.9, 1.0]
      colsample_bytree: [0.8, 0.9, 1.0]
      reg_lambda: [1, 1.5, 2]
      reg_alpha: [0, 0.1, 0.2]


best_model_alta:
  module: xgboost
  class: XGBClassifier
  kwargs:
      bootstrap: False
      max_depth: 30
      n_estimators: 150
  target: alta_category

best_model_diag:
  module: xgboost
  class: XGBClassifier
  kwargs:
      bootstrap: False
      max_depth: 30
      n_estimators: 150
  target: diagnosis_category