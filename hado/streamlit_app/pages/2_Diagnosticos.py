from kedro.framework.session import KedroSession
from kedro.framework.startup import bootstrap_project
import streamlit as st
import plotly.express as px


project_path = r"C:/Users/Pablo Villar/Desktop/CURSOS/KSchool/M치ster en Data Science/TFM/nuevo_entorno_kedro/hado"
bootstrap_project(project_path)

with KedroSession.create("hado", project_path) as session:
    context = session.load_context() 

# cargar los datos
df = context.catalog.load("hado_cleaned")

# Configuraci칩n de la p치gina de Streamlit
st.set_page_config(
    page_title="Hospital Dashboard",
    page_icon="游낀",
    layout="wide",
)

# T칤tulo de la p치gina
st.title("An치lisis de diagn칩sticos")

# Descripci칩n de la p치gina
st.write(
    """
    Este panel de control permite al personal del hospital obtener informaci칩n en tiempo real sobre los pacientes y sus diagn칩sticos. 
    Aqu칤 puedes visualizar los datos, filtrarlos y realizar an치lisis.
    """
)

# Mostrar los datos en un dataframe
diagnostic_counts = df['diagnostico'].value_counts()
st.write(diagnostic_counts)


# Descripci칩n de la p치gina
st.write("""
    Seleccione un diagn칩stico y una columna para visualizar.
""")

# Cargando los datos (aqu칤 deber칤as cargar tus datos)
df = context.catalog.load("hado_cleaned")

# Creando los selectores de diagn칩stico y columna
selected_diagnosis = st.selectbox("Seleccione un diagn칩stico", options=df['diagnostico'].unique())
selected_column = st.selectbox("Seleccione una columna", options=df.columns)

# Filtrando el dataframe por diagn칩stico
filtered_df = df[df.diagnostico == selected_diagnosis]

# Ordenando los valores del histograma y tomando solo los 10 m치s comunes
filtered_df = filtered_df[selected_column].value_counts().sort_values(ascending=False).reset_index()

# Creando la figura
fig = px.histogram(filtered_df, x='index', y=selected_column,
                   title=f"Frecuencia de {selected_column} para {selected_diagnosis}")

# Mostrando la figura
st.plotly_chart(fig)

